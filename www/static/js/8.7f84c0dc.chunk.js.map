{"version":3,"sources":["routes/Stations/DriverStationDetail.js","routes/Stations/DriverStations.js","util/Statelabel.js","api/online.js","util/PlainSelect.js","util/paramsHasChanged.js","util/isDate.js","routes/Stations/StationsMap.js","routes/Connectors/ConnectorButtons.js"],"names":["online","tick","DriverStationDetail","props","m","key","prefix","intl","formatMessage","id","pendingStart","onPendingStart","setState","pending","pendingEnd","onPendingEnd","load","stationId","readings","context","api","q","toArray","Promise","allSettled","map","result","value","item","access","files","chargeToggle","detailPending","charging","message","error","success","reserveToggle","reserved","state","this","prevProps","locale","connectors","DetailRow","property","connected","Date","toLocaleString","gutter","className","xs","spinning","description","Flex","between","Statelabel","readOnly","u","onFinish","prop","length","c","idx","chargername","chargerdescription","style","whiteSpace","ConnectorButtons","to","f","alt","src","window","appConfig","apiDomain","link","React","Component","contextType","Context","withRouter","injectIntl","DriverStations","setParams","match","params","carId","param1","chargerId","param2","search","push","field","compare","charger","stations","getItemGeo","geo","lat","latitude","lng","longitude","drawerClose","drawerVisible","onPlacemarkClick","drawerItem","config","mapLanguage","mapLoaded","paramsHasChanged","mapDefaultCenter","Array","isArray","points","filter","mapRef","createRef","lang","CircularProgress","title","label","placement","onClose","visible","CustomScrollbars","Helmet","visibility","size","PlainSelect","placeholder","formatLabel","identity","extraFields","enabledOnly","labelKey","query","onChange","v","history","chargerac","defaultState","center","zoom","width","height","modules","onLoad","ymaps","current","setBounds","util","bounds","fromPoints","instanceRef","ref","balloonContent","modelname","vendorname","defaultGeometry","onClick","options","iconLayout","iconImageHref","iconImageSize","confirm","Modal","popoverToggle","popoverOpen","methods","classcode","run","method","ask","actioncode","content","icon","onOk","statelabel","color","created","enabled","disabled","deleted","statetypecode","trigger","onVisibleChange","withOnline","d","statenewlabel","statenewtypecode","is","fetch","goOffline","dispatch","log","goOnline","type","detail","dispatchEvent","CustomEvent","token","accessToken","get","dt","setMilliseconds","getMilliseconds","apiCheckInterval","body","JSON","stringify","reclimit","orderby","json","response","headers","Headers","append","url","apiPath","mode","cache","items","forEach","n","object","itemsCount","Object","keys","debug","console","mapOnlineProps","propsKeys","onOnlineChanged","e","data","passProps","propName","addEventListener","removeEventListener","anyChanges","onlineInterval","setInterval","Option","Select","createSearch","searchText","async","getLabelKey","getIdKey","valueKey","shureHaveValue","find","fields","concat","fetchFn","onSearch","i","then","option","defaultActiveFirstOption","allowClear","loading","showSearch","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","prevParams","nowParams","param3","isDate","date","isNaN","StationsMap","properties","balloonContentHeader","join","balloonContentFooter","includes","statecode","_jsxs","Fragment","_jsx","Tooltip","Button","stopPropagation","FallOutlined","HistoryOutlined","statenewcode"],"mappings":"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","file":"static/js/8.7f84c0dc.chunk.js","sourcesContent":["import React from \"react\";\nimport Context from \"../../Context\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport { Button, Col, Empty, message, Row, Spin, Tooltip } from \"antd\";\nimport isDate from \"../../util/isDate\";\nimport Flex from \"../../util/Flex\";\nimport Statelabel from \"../../util/Statelabel\";\nimport ConnectorButtons from \"../Connectors/ConnectorButtons\";\nimport { online } from \"../../api/online\";\n//import config from \"../../api/config\";\n\n// if (!window.onlineInterval && config.apiCheckInterval) {\n//   window.setInterval(() => online.tick(), config.apiCheckInterval);\n// }\n\nonline.tick();\n\nclass DriverStationDetail extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailPending: false,\n      pending: false,\n      stationId: false,\n      item: {},\n      access: {},\n      files: [],\n    };\n  }\n  m = (key, prefix = \"stations.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.stationId !== this.props.stationId ||\n      prevProps.intl.locale !== this.props.intl.locale\n    ) {\n      this.setState({ item: {} }, () => this.load());\n    }\n  }\n\n  load = async () => {\n    if (this.props.stationId) {\n      this.pendingStart();\n\n      let readings = [\n        this.context.api.q(\"/charge_point/get\", {\n          id: this.props.stationId,\n        }),\n        this.context.api.q(\"/object/access/decode\", {\n          id: this.props.stationId,\n        }),\n        this.context.api.q(\n          \"/object/file\",\n          {\n            id: this.props.stationId,\n          },\n          { toArray: true }\n        ),\n      ];\n      let [item, access, files] = (await Promise.allSettled(readings)).map(\n        (result) => result.value\n      );\n\n      this.setState({ item, access, files }, () => this.pendingEnd());\n    } else {\n      this.setState({ item: {}, access: {}, files: [] });\n    }\n  };\n\n  chargeToggle = async (item = {}) => {\n    if (item.id) {\n      this.setState({ detailPending: true });\n      let result = false;\n      if (item.charging) {\n        result = await this.context.api.q(\"/connector/remote/stop\", {\n          id: item.id,\n        });\n      } else {\n        result = await this.context.api.q(\"/connector/remote/start\", {\n          id: item.id,\n        });\n      }\n      this.setState({ detailPending: false });\n      if (result === false) {\n        message.error(this.m(\"method.fail\", \"\"));\n      } else {\n        message.success(this.m(\"method.success\", \"\"));\n      }\n      this.load();\n    }\n  };\n\n  reserveToggle = async (item = {}) => {\n    if (item.id) {\n      this.setState({ detailPending: true });\n      let result = false;\n      if (item.reserved) {\n        result = await this.context.api.q(\"/connector/reserve/cancel\", {\n          id: item.id,\n        });\n      } else {\n        result = await this.context.api.q(\"/connector/reserve/now\", {\n          id: item.id,\n        });\n      }\n      this.setState({ detailPending: false });\n      if (result === false) {\n        message.error(this.m(\"method.fail\", \"\"));\n      } else {\n        message.success(this.m(\"method.success\", \"\"));\n      }\n      this.load();\n    }\n  };\n\n  render() {\n    const { pending, item, access, files } = this.state;\n    const connectors = item.connectors || [];\n\n    const displayDetailProps = [\n      \"identity\",\n      \"modelname\",\n      \"vendorname\",\n      \"serialnumber\",\n      \"boxserialnumber\",\n      \"iccid\",\n      \"imsi\",\n      \"networkname\",\n      \"connected\",\n      \"connectionupdate\",\n      \"lastupdate\",\n    ];\n\n    const DetailRow = ({item, property, connected}) => {\n      let value = item?.[property];\n      if (typeof value === \"string\") {\n        if (property === 'lastupdate' || property === 'created' || property === 'connectionupdate') {\n          value = new Date(value).toLocaleString();\n        }\n      } else if (typeof value === \"boolean\") {\n        value = value ? this.m(\"true\") : this.m(\"false\")\n      }\n      if (!value) return null;\n      return (\n        <Row gutter={[16, 16]} className=\"gx-mb-2\">\n          <Col className=\"gx-text-muted gx-font-weight-light gx-pr-2\" xs={10}>\n            {property === 'connectionupdate' ? connected ? this.m(property) : this.m(\"disconnected\") : this.m(property)}\n          </Col>\n          <Col xs={14}>{value}</Col>\n        </Row>\n      );\n    };\n\n    return (\n      <div>\n        <Spin spinning={pending}>\n          {!item?.id && <Empty />}\n          {item?.id && (\n            <div className=\"gx-mb-3\">\n              {item?.description && (\n                <div className=\"gx-text-muted gx-font-weight-light gx-mb-3\">\n                  {item.description}\n                </div>\n              )}\n              <Flex between className=\"gx-mb-3 gx-pr-1\">\n                <h4>{this.m(\"details\")}</h4>\n                <Statelabel\n                  {...item}\n                  readOnly={!access?.u}\n                  onFinish={this.load}\n                />\n              </Flex>\n              {displayDetailProps.map((prop) => (\n                <DetailRow key={prop} item={item} property={prop} connected={item.connected} />\n              ))}\n              {connectors.length > 0 && (\n                <>\n                  <Spin spinning={this.state.detailPending}>\n                    <hr />\n                    {connectors.map((c, idx) => {\n                      return (\n                        <div className=\"gx-mb-2\" key={idx}>\n                          <Flex between>\n                            <div>\n                              {c.chargername}\n                              <div className=\"gx-font-weight-light gx-text-small gx-text-muted\">\n                                {c.chargerdescription}\n                              </div>\n                            </div>\n                            <div className=\"gx-ml-2 gx-mr-1\">\n                              <Statelabel\n                                {...c}\n                                readOnly={true}\n                                onFinish={this.load}\n                              />\n                              <div style={{ whiteSpace: \"nowrap\" }}>\n                                <ConnectorButtons\n                                  m={this.m}\n                                  {...c}\n                                  chargeToggle={(value) =>\n                                    this.chargeToggle(c, value)\n                                  }\n                                  reserveToggle={(value) =>\n                                    this.reserveToggle(c, value)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </Flex>\n                        </div>\n                      );\n                    })}\n                  </Spin>\n                </>\n              )}\n              {access?.u && (\n                <Link to={`/crm/station/${item.id}`}>\n                  <Button className=\"gx-mb-0 gx-mt-4\">\n                    {this.m(\"edit\", \"\")}\n                  </Button>\n                </Link>\n              )}\n              {files.length > 0 && (\n                <>\n                  <hr />\n                  {files.map((f, idx) => {\n                    return (\n                      <img\n                        key={idx}\n                        alt=\"\"\n                        src={window.appConfig.apiDomain + f.link}\n                      />\n                    );\n                  })}\n                </>\n              )}\n            </div>\n          )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(DriverStationDetail));\n","import { Card, Drawer, Empty } from \"antd\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { YMaps, Map, Placemark, ZoomControl } from \"react-yandex-maps\";\nimport CircularProgress from \"../../components/CircularProgress\";\nimport Context from \"../../Context\";\nimport CustomScrollbars from \"../../util/CustomScrollbars\";\nimport paramsHasChanged from \"../../util/paramsHasChanged\";\nimport PlainSelect from \"../../util/PlainSelect\";\nimport DriverStationDetail from \"./DriverStationDetail\";\nimport StationsMap from \"./StationsMap\";\n\nclass DriverStations extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n\tthis.config = window.appConfig || { mapLanguage: \"ru_RU\" };\n    this.state = {\n\t\t\n      mapLoaded: false,\n      pending: false,\n      stations: [],\n\n      carId: false,\n      chargerId: false,\n\n      drawerVisible: false,\n      drawerItem: {},\n    };\n  }\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  m = (key, prefix = \"stations.map.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  componentDidMount() {\n    this.setParams();\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (paramsHasChanged(prevProps, this.props)) {\n      this.setParams();\n    }\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.load();\n    }\n  }\n\n  setParams = () => {\n    const { param1: carId, param2: chargerId } = this.props.match.params;\n    this.setState(\n      {\n        carId,\n        chargerId,\n      },\n      () => this.load()\n    );\n  };\n\n  load = async () => {\n    this.pendingStart();\n\n    let search = [];\n    if (this.state.chargerId) {\n      search.push({\n        field: \"connectors\",\n        compare: \"GIN\",\n        value: [{ charger: this.state.chargerId }],\n      });\n    }\n    let stations = await this.context.api.q(\n      \"/charge_point/list\",\n      { search },\n      { toArray: true }\n    );\n    this.setState({ stations }, () => this.pendingEnd());\n  };\n\n  getItemGeo = (item) => {\n    let geo = item?.geo?.[0] || {};\n    let lat = geo.latitude;\n    let lng = geo.longitude;\n    if (lat && lng) {\n      return [lat, lng];\n    }\n    return null;\n  };\n\n  drawerClose = () => {\n    this.setState({ drawerVisible: false });\n  };\n\n  onPlacemarkClick = (drawerItem) => {\n    this.setState({ drawerItem, drawerVisible: true });\n  };\n\n  render() {\n    const { stations, mapLoaded, pending, drawerItem } = this.state;\n    let defaultCenter = window.appConfig.mapDefaultCenter;\n\tif (!Array.isArray(stations)) return null;\n    if (stations.length === 0) return <Empty />;\n\n    \n      const points = stations\n      .map((item) => this.getItemGeo(item))\n      .filter((geo) => geo);\n\t  if (points.length === 0) {\n\t\treturn (\n\t\t  <div className={this.props.className}>\n\t\t\t<Empty />\n\t\t  </div>\n\t\t);\n\t  }\n  \n\t  \n    const mapRef = React.createRef();\n\tconst lang = this.config.mapLanguage;\n    return (\n      <>\n        {(!mapLoaded || pending) && <CircularProgress />}\n        <Drawer\n          title={drawerItem?.label}\n          placement=\"right\"\n          onClose={this.drawerClose}\n          visible={this.state.drawerVisible}\n        >\n          <CustomScrollbars>\n            <DriverStationDetail stationId={drawerItem?.id} />\n          </CustomScrollbars>\n        </Drawer>\n        <Helmet>\n          <title>{this.m(\"stations\")}</title>\n        </Helmet>\n        <div\n          className=\"gx-st-map huge\"\n          style={{ visibility: mapLoaded && !pending ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"filterbox\">\n            <Card size=\"small\">\n              <PlainSelect\n                value={this.state.carId}\n                placeholder={this.m(\"forcar\")}\n                formatLabel={(item) => `${item.label} ${item.identity}`}\n                extraFields={[\"identity\", \"chargerac\"]}\n                enabledOnly\n                labelKey=\"label\"\n                query=\"/car/list\"\n                onChange={(v, item) => {\n\n                  this.props.history.push(\n                    `/driver/stations/${v}/${item.chargerac || \"\"}`\n                  );\n                }}\n              />\n            </Card>\n          </div>\n          <YMaps key={lang} query={{ lang }}>\n            <Map\n              defaultState={{ center: points[0] || [50.85045, 4.34878], zoom: 9 }}\n              width={\"100%\"}\n              height={\"100%\"}\n              modules={[\"geoObject.addon.balloon\", \"util.bounds\"]}\n              onLoad={(ymaps) => {\n                this.setState({ mapLoaded: true });\n                if (points.length > 1) {\n                  mapRef.current.setBounds(\n                    ymaps.util.bounds.fromPoints(points)\n                  );\n                }\n              }}\n              instanceRef={(ref) => {\n                if (ref) {\n                  mapRef.current = ref;\n                }\n              }}\n            >\n              {stations.length !== 0 ? stations.map((item, idx) => {\n                let geo = this.getItemGeo(item);\n                if (!geo) return null;\n\n                let balloonContent = [];\n                if (item.description)\n                  balloonContent.push(`<div>${item.description || \"\"}</div>`);\n                if (item.modelname)\n                  balloonContent.push(\n                    `<div>${item.modelname || \"\"} ${\n                      item.vendorname || \"\"\n                    }</div>`\n                  );\n\n                return (\n                  <Placemark\n                    key={idx}\n                    defaultGeometry={geo}\n                    onClick={() => this.onPlacemarkClick(item)}\n                    options={{\n                      iconLayout: \"default#image\",\n                      iconImageHref: \"/assets/images/images-32-removebg-preview.png\",\n                      iconImageSize: [32, 32],\n                    }}\n                  />\n                );\n              }) : []}\n              <ZoomControl />\n            </Map>\n          </YMaps>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(DriverStations));\n","import { message, Popover, Spin, Tag, Modal } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport React from \"react\";\nimport Context from \"../Context\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { withOnline } from \"../api/online\";\n\nconst { confirm } = Modal;\n\nclass Statelabel extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverOpen: false,\n      methods: [],\n    };\n  }\n\n  popoverToggle = () => {\n    this.setState(\n      (state) => {\n        return {\n          popoverOpen: !state.popoverOpen,\n          methods: !state.popoverOpen ? [] : state.methods,\n        };\n      },\n      () => this.load()\n    );\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  load = async () => {\n    if (this.state.popoverOpen) {\n      this.pendingStart();\n      let methods = await this.context.api.q(\n        `/${this.props.classcode}/method`,\n        { id: this.props.id },\n        { toArray: true }\n      );\n      this.setState({ methods }, () => this.pendingEnd());\n    }\n  };\n\n  run = async (method) => {\n    this.pendingStart();\n    let result = await this.context.api.q(\"/method/run\", {\n      id: this.props.id,\n      method: method.id,\n    });\n    this.pendingEnd();\n    this.popoverToggle();\n    if (!result) {\n      message.error(this.m(\"method.fail\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"method.success\"));\n      if (this.props.onFinish) {\n        this.props.onFinish(method);\n      }\n    }\n  };\n\n  ask = async (method) => {\n    if (method.actioncode === \"drop\") {\n      confirm({\n        title: this.m(\"method.confirm.title\"),\n        content: this.m(\"method.confirm.text\"),\n        icon: <ExclamationCircleOutlined />,\n        onOk: () => {\n          this.run(method);\n        },\n      });\n    } else {\n      this.run(method);\n    }\n  };\n\n  m = (id) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id });\n  };\n\n  render() {\n    if (!this.props?.statelabel) return null;\n\n    const { pending, methods = [] } = this.state;\n\n    const colors = {\n      created: \"processing\",\n      enabled: \"success\",\n      disabled: \"default\",\n      deleted: \"error\",\n    };\n\n    const label = (\n      <Tag className=\"gx-m-0\" color={colors[this.props.statetypecode]}>\n        {this.props.statelabel}\n      </Tag>\n    );\n\n    if (this.props.readOnly) return label;\n\n    return (\n      <Popover\n        content={\n          <div className={`${methods.length === 0 && \"gx-p-3\"}`}>\n            <Spin spinning={pending}>\n              {methods.map((method) => {\n                if (!method.visible) return null;\n                return (\n                  <div\n                    key={method.id}\n                    onClick={() => this.ask(method)}\n                    className=\"gx-my-2 gx-pointer gx-link\"\n                  >\n                    {method.label}\n                  </div>\n                );\n              })}\n            </Spin>\n          </div>\n        }\n        trigger=\"click\"\n        visible={this.state.popoverOpen}\n        onVisibleChange={this.popoverToggle}\n      >\n        <div className=\"gx-pointer\">{label}</div>\n      </Popover>\n    );\n  }\n}\n\nconst mapOnlineProps = {\n  statelabel: (d) => d.statenewlabel,\n  statetypecode: (d) => d.statenewtypecode,\n};\nexport default withOnline(injectIntl(Statelabel), mapOnlineProps);\n","import React from \"react\";\nimport config from \"./config\";\nimport accessToken from \"./token\";\n\nconst online = {\n  is: false,\n\n  tick: () => {\n    online.fetch();\n  },\n  goOffline: () => {\n    if (online.is) {\n      online.is = false;\n      online.dispatch(\"onlineGoOffline\");\n      online.log(\"Went offline\");\n    }\n  },\n  goOnline: () => {\n    if (!online.is) {\n      online.is = true;\n      online.dispatch(\"onlineGoOnline\");\n      online.log(\"Back On Line\");\n    }\n  },\n  dispatch: (type, detail = {}) => {\n    window.dispatchEvent(new CustomEvent(type, { detail }));\n  },\n  fetch: async () => {\n    let token = accessToken.get();\n    if (token) {\n      let dt = new Date();\n      dt.setMilliseconds(\n        dt.getMilliseconds() - (config.apiCheckInterval + 5000)\n      );\n\n      const body = JSON.stringify({\n        search: [{ field: \"datetime\", value: dt, compare: \"GEQ\" }],\n        reclimit: 500,\n        orderby: [\"datetime DESC\"],\n      });\n\n      let json = null;\n      let response = null;\n      let headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"Authorization\", `Bearer ${token}`);\n      const url = `${config.apiDomain}${config.apiPath}/notification/list`;\n\n      try {\n        response = await fetch(url, {\n          method: \"POST\",\n          headers,\n          body,\n          mode: \"cors\",\n          cache: \"no-store\",\n        });\n        if (response) {\n          json = await response.json();\n          if (json?.error) {\n            return online.error(json?.error?.message);\n          }\n        }\n        online.goOnline();\n      } catch (e) {\n        online.goOffline();\n        return online.error(e.message);\n      }\n      if (json) {\n        let items = {};\n        (Array.isArray(json) ? json : [json]).forEach((n) => {\n          if (!items[n.object]) {\n            items[n.object] = n;\n          }\n        });\n\n        let itemsCount = Object.keys(items).length;\n\n        if (itemsCount > 0) {\n          online.dispatch(\"onlineChanged\", { items });\n          online.log(\"messages count \" + itemsCount);\n        }\n      }\n      return false;\n    }\n  },\n  error: (message) => {\n    if (config.debug) {\n      console.log(`%c OnLine: ERROR \"${message}\"`, \"color: orange\");\n    }\n    return false;\n  },\n  log: (message) => {\n    if (config.debug) {\n      console.log(`%c OnLine: ${message}`, \"color: cyan\");\n    }\n  },\n};\n\nif (!window.onlineInterval && config.apiCheckInterval) {\n  window.setInterval(() => online.tick(), config.apiCheckInterval);\n}\n\nfunction withOnline(Component, mapOnlineProps) {\n  const propsKeys = Object.keys(mapOnlineProps);\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        passProps: {},\n      };\n    }\n    componentDidMount() {\n      window.addEventListener(\"onlineChanged\", this.onOnlineChanged);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"onlineChanged\", this.onOnlineChanged);\n    }\n\n    onOnlineChanged = (e) => {\n      let data = e?.detail?.items[this.props.id];\n      if (data) {\n        this.setState(({ passProps }) => {\n          propsKeys.forEach((propName) => {\n            passProps[propName] = mapOnlineProps[propName](data);\n          });\n          return { passProps };\n        });\n\n        this.setState({ data });\n      }\n    };\n\n    componentDidUpdate(prevProps) {\n      let { passProps } = this.state;\n      let anyChanges = false;\n\n      propsKeys.forEach((propName) => {\n        if (prevProps[propName] !== this.props[propName]) {\n          passProps[propName] = this.props[propName];\n          anyChanges = true;\n        }\n      });\n      if (anyChanges) this.setState({ passProps });\n    }\n\n    render() {\n      const { passProps } = this.state;\n\n      return <Component {...this.props} {...passProps} />;\n    }\n  };\n}\n\nexport { online, withOnline };\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Select } from \"antd\";\nimport Context from \"../Context\";\n\nconst { Option } = Select;\n\nclass PlainSelect extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      pending: false,\n      items: [],\n    };\n  }\n  componentDidMount() {\n    this.load().then(this.shureHaveValue());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.shureHaveValue();\n    }\n  }\n\n  createSearch = () => {\n    let search = this.props.search || [];\n    if (this.state.searchText && this.props.async) {\n      search.push({\n        field: this.props.labelKey || \"label\",\n        compare: \"IKE\",\n        value: `%${this.state.searchText}%`,\n      });\n    }\n    if (this.props.enabledOnly) {\n      search.push({\n        field: \"statetypecode\",\n        compare: \"EQL\",\n        value: \"enabled\",\n      });\n    }\n    return search;\n  };\n\n  getLabelKey = () => this.props.labelKey || \"label\";\n\n  getIdKey = () => this.props.valueKey || \"id\";\n\n  shureHaveValue = async () => {\n    if (this.props.async) {\n      if (\n        !this.state.items.find(\n          (item) => item[this.getIdKey()] === this.props.value\n        )\n      ) {\n        this.setState({ pending: true });\n        let result = await this.context.api.q(\"/object/get\", {\n          id: this.props.value,\n          fields: [this.getIdKey(), this.getLabelKey()],\n        });\n        this.setState({ pending: false });\n        if (result?.[this.getLabelKey()]) {\n          this.setState(({ items }) => {\n            items.push(result);\n            return { items };\n          });\n        }\n      }\n    }\n  };\n\n  load = async () => {\n    if (this.props.items) {\n      this.setState({ items: this.props.items });\n      return;\n    }\n\n    let items = [];\n\n    let reclimit = this.props.async ? 1 : 0;\n\n    if (this.props.query) {\n      this.setState({ pending: true });\n      let search = this.createSearch();\n\n      let fields = [this.getIdKey(), this.getLabelKey()].concat(\n        this.props.extraFields || []\n      );\n\n      let fetchFn = this.props.cache\n        ? this.context.api.cache\n        : this.context.api.q;\n      items = await fetchFn(\n        this.props.query,\n        { search, reclimit, fields },\n        { toArray: true }\n      );\n      this.setState({ pending: false, items });\n    }\n  };\n  onSearch = async (value) => {\n    if (this.props.async) {\n      this.setState({ searchText: value }, () => this.load());\n    }\n  };\n\n  onChange = (value) => {\n    let item = this.state.items.find((i) => i[this.getIdKey()] === value);\n    this.props.onChange(value, item);\n  };\n\n  render() {\n    let valueRendered = false;\n    let items = this.state.items.map((item, idx) => {\n      let option = item || {};\n      let value = option[this.getIdKey()];\n      let label = this.props.formatLabel\n        ? this.props.formatLabel(item)\n        : option[this.getLabelKey()];\n      if (value === this.props.value) valueRendered = true;\n      return (\n        <Option key={idx} value={value}>\n          {label}\n        </Option>\n      );\n    });\n\n    return (\n      <Select\n        defaultActiveFirstOption={false}\n        allowClear={this.props.allowClear}\n        loading={this.state.pending ? true : false}\n        value={!this.state.pending ? this.props.value : null}\n        showSearch\n        placeholder={this.props.placeholder}\n        optionFilterProp=\"children\"\n        onChange={this.onChange}\n        onSearch={this.onSearch}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {items}\n      </Select>\n    );\n  }\n}\nexport default injectIntl(PlainSelect);\n","export default function paramsHasChanged(prevProps, props) {\n  const prevParams = prevProps.match.params || {};\n  const nowParams = props.match.params || {};\n\n  if (\n    prevParams.param1 !== nowParams.param1 ||\n    prevParams.param2 !== nowParams.param2 ||\n    prevParams.param3 !== nowParams.param3\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","export default function isDate(date) {\n  if (!date) return false;\n  return new Date(date) !== \"Invalid Date\" && !isNaN(new Date(date));\n}\n","import React from \"react\";\nimport { Empty, Spin } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { YMaps, Map, Placemark, ZoomControl } from \"react-yandex-maps\";\n\nclass StationsMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.config = window.appConfig || { mapLanguage: \"ru_RU\" };\n    this.state = {\n      mapLoaded: false,\n    };\n  }\n\n  m = (key, prefix = \"stations.map.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  getItemGeo = (item) => {\n    let geo = item?.geo?.[0] || {};\n    let lat = geo.latitude;\n    let lng = geo.longitude;\n    if (lat && lng) {\n      return [lat, lng];\n    }\n    return null;\n  };\n\n  render() {\n    const { stations } = this.props;\n    if (!Array.isArray(stations)) return null;\n    if (stations.length === 0) return <Empty />;\n\n    const mapRef = React.createRef();\n\n    const points = stations\n      .map((item) => this.getItemGeo(item))\n      .filter((geo) => geo);\n\n    if (points.length === 0) {\n      return (\n        <div className={this.props.className}>\n          <Empty />\n        </div>\n      );\n    }\n\n    const lang = this.config.mapLanguage;\n\n    return (\n      <div className={this.props.className}>\n        {!this.state.mapLoaded && <Spin spinning></Spin>}\n        <YMaps key={lang} query={{ lang }} >\n          <Map\n            defaultState={{ center: points[0] || [], zoom: 9 }}\n            width={\"100%\"}\n            height={\"100%\"}\n            modules={[\"geoObject.addon.balloon\", \"util.bounds\"]}\n            onLoad={(ymaps) => {\n              this.setState({ mapLoaded: true });\n              if (points.length > 1) {\n                mapRef.current.setBounds(ymaps.util.bounds.fromPoints(points));\n              }\n            }}\n            instanceRef={(ref) => {\n              if (ref) {\n                mapRef.current = ref;\n              }\n            }}\n          >\n            {stations.map((item, idx) => {\n              let geo = this.getItemGeo(item);\n              if (!geo) return null;\n\n              let balloonContent = [];\n              if (item.description)\n                balloonContent.push(`<div>${item.description || \"\"}</div>`);\n              if (item.modelname)\n                balloonContent.push(\n                  `<div>${item.modelname || \"\"} ${item.vendorname || \"\"}</div>`\n                );\n\n              return (\n                <Placemark\n                  key={idx}\n                  defaultGeometry={geo}\n                  options={{\n                    iconLayout: \"default#image\",\n                    iconImageHref: \"/assets/images/images-32-removebg-preview.png\",\n                    iconImageSize: [32, 32],\n                  }}\n                  properties={{\n                    balloonContentHeader: `${item.label}`,\n                    balloonContent: balloonContent.join(\"\"),\n                    balloonContentFooter: `<a href=\"/crm/station/${\n                      item.id\n                    }\">${this.m(\"more\")}</a>`,\n                  }}\n                />\n              );\n            })}\n            <ZoomControl />\n          </Map>\n        </YMaps>\n      </div>\n    );\n  }\n}\nexport default injectIntl(StationsMap);\n","import { FallOutlined, HistoryOutlined } from \"@ant-design/icons\";\nimport { Button, Tooltip } from \"antd\";\nimport React from \"react\";\nimport { withOnline } from \"../../api/online\";\n\nfunction ConnectorButtons(props) {\n  let charging = [\"charging\"].includes(props.statecode);\n  let reserved = [\"reserved\"].includes(props.statecode);\n\n  return (\n    <React.Fragment>\n      <Tooltip title={props.m(\"btn.charge\")}>\n        <Button\n          className=\"gx-mr-1\"\n          onClick={(e) => {\n            e.stopPropagation();\n            props.chargeToggle(charging);\n          }}\n          icon={\n            <FallOutlined className={`${charging ? \"gx-text-warning\" : \"\"}`} />\n          }\n        />\n      </Tooltip>\n      <Tooltip title={props.m(\"btn.reserve\")}>\n        <Button\n          onClick={(e) => {\n            e.stopPropagation();\n            props.reserveToggle(reserved);\n          }}\n          icon={\n            <HistoryOutlined\n              className={`${reserved ? \"gx-text-warning\" : \"\"}`}\n            />\n          }\n        />\n      </Tooltip>\n    </React.Fragment>\n  );\n}\nconst mapOnlineProps = {\n  statecode: (d) => d.statenewcode,\n};\nexport default withOnline(ConnectorButtons, mapOnlineProps);\n"],"sourceRoot":""}