{"version":3,"sources":["util/compressor.js","routes/Profile/Profile.js","util/toBase64.js"],"names":["defaultParams","maxWidth","maxHeight","quality","compressor","base64","callParams","canvas","document","createElement","img","Object","assign","Promise","resolve","reject","onload","width","height","Math","round","getContext","drawImage","toDataURL","onerror","err","src","Profile","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","m","key","prefix","arguments","length","undefined","intl","formatMessage","id","save","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","user","wrap","_context","prev","next","setState","pending","context","api","q","username","raw","profile","password","email","name","sent","message","success","onAfterSave","error","stop","_x","apply","changePassword","_ref2","_callee2","_context2","oldpass","newpass","_x2","prepareAvatar","_callee3","file","maxSize","_yield$toBase","_context3","state","fileInputRef","current","files","window","appConfig","maxFileSize","size","concat","abrupt","toBase64","readerResult","then","compressedResult","saveAvatar","modalHide","_ref4","_callee4","picture","_context4","_x3","modalShow","location","reload","moodalShow","React","createRef","_createClass","value","_this2","this","_this$state","layout","labelCol","span","wrapperCol","_jsxs","children","_jsx","Helmet","Modal","title","visible","onOk","onCancel","footer","Button","onClick","type","loading","Spin","spinning","ref","className","Card","Flex","between","show","Avatar","style","marginRight","literal","hello","Space","Badge","backgroundColor","count","isAdmin","isGuest","connectionLink","navigator","clipboard","writeText","CopyOutlined","Form","_objectSpread","onFinish","autoComplete","Item","rules","required","label","initialValue","Input","placeholder","Row","Col","htmlType","Password","Component","contextType","Context","connect","injectIntl","reader","FileReader","readAsDataURL","result","resultString","toString","re","match","encoded","replace","repeat"],"mappings":"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","file":"static/js/40.d88570c6.chunk.js","sourcesContent":["const defaultParams = {\n  maxWidth: 2000,\n  maxHeight: 2000,\n  quality: 0.8,\n};\n\nexport default function compressor(base64, callParams = {}) {\n  const canvas = document.createElement(\"canvas\");\n  const img = document.createElement(\"img\");\n\n  const { maxWidth, maxHeight, quality } = Object.assign(\n    defaultParams,\n    callParams\n  );\n\n  return new Promise((resolve, reject) => {\n    img.onload = function () {\n      let width = img.width;\n      let height = img.height;\n\n      if (width > height) {\n        if (width > maxWidth) {\n          height = Math.round((height *= maxWidth / width));\n          width = maxWidth;\n        }\n      } else {\n        if (height > maxHeight) {\n          width = Math.round((width *= maxHeight / height));\n          height = maxHeight;\n        }\n      }\n      canvas.width = width;\n      canvas.height = height;\n\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0, width, height);\n      //resolve(base64);\n      resolve(canvas.toDataURL(\"image/jpeg\", quality));\n    };\n    img.onerror = function (err) {\n      resolve(false);\n    };\n    img.src = base64;\n  });\n}\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport Context from \"../../Context\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Form,\n  Input,\n  Button,\n  Space,\n  Card,\n  Avatar,\n  Badge,\n  Row,\n  Col,\n  message,\n  Modal,\n  Spin,\n} from \"antd\";\n\nimport { connect } from \"react-redux\";\nimport Flex from \"../../util/Flex\";\nimport compressor from \"../../util/compressor\";\nimport toBase64 from \"../../util/toBase64\";\nimport { CopyOutlined } from \"@ant-design/icons\";\n\nclass Profile extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: false,\n      moodalShow: false,\n      fileInputRef: React.createRef(),\n    };\n  }\n  m = (key, prefix = \"userprofile.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n  save = async (data) => {\n    const { user } = this.props;\n    this.setState({ pending: true });\n    let result = await this.context.api.q(\"/user/set\", {\n      username: user.raw.profile.username,\n      password: data.password,\n      email: data.email,\n      name: data.name,\n    });\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      this.onAfterSave();\n    }\n  };\n\n  changePassword = async (data) => {\n    this.setState({ pending: true });\n    let result = await this.context.api.q(\"/user/password\", {\n      oldpass: data.oldpass,\n      newpass: data.newpass,\n    });\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      this.onAfterSave();\n    }\n  };\n\n  prepareAvatar = async () => {\n    if (this.state.fileInputRef.current) {\n      if (this.state.fileInputRef.current.files[0]) {\n        this.setState({ pending: true });\n        const file = this.state.fileInputRef.current.files[0];\n\n        const maxSize = window.appConfig.maxFileSize;\n        if (maxSize && file.size > maxSize) {\n          message.error(\n            `${this.m(\"file.size.exceed\", \"\")}: ${Math.round(\n              maxSize / 1024\n            )} ${this.m(\"kb\", \"\")}`\n          );\n          this.setState({ pending: false });\n          return;\n        }\n\n        let { readerResult } = await toBase64(file);\n        compressor(readerResult, { maxWidth: 200, maxHeight: 200 }).then(\n          (compressedResult) => {\n            if (compressedResult) {\n              this.saveAvatar(compressedResult);\n            } else {\n              message.error(this.m(\"file.read.failed\", \"\"));\n              this.setState({ pending: false });\n            }\n          }\n        );\n      } else {\n        this.modalHide();\n      }\n    } else {\n      this.modalHide();\n    }\n  };\n  saveAvatar = async (picture) => {\n    this.setState({ pending: true });\n    let result = await this.context.api.q(\"/user/profile/set\", {\n      picture,\n    });\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      this.onAfterSave();\n    }\n  };\n  modalShow = () => {\n    this.setState({ modalShow: true });\n  };\n  modalHide = () => {\n    this.setState({ modalShow: false });\n  };\n  onAfterSave = () => {\n    document.location.reload();\n  };\n  render() {\n    const { user } = this.props;\n    const { pending, modalShow, fileInputRef } = this.state;\n\n    const layout = {\n      labelCol: {\n        span: 8,\n      },\n      wrapperCol: {\n        span: 16,\n      },\n    };\n\n    return (\n      <div>\n        <Helmet>\n          <title>{this.m(\"profile\")}</title>\n        </Helmet>\n        <Modal\n          title={this.m(\"avatar.change\")}\n          visible={modalShow}\n          onOk={this.prepareAvatar}\n          onCancel={this.modalHide}\n          footer={[\n            <Button key=\"cancell\" onClick={this.modalHide}>\n              {this.m(\"cancell\", \"\")}\n            </Button>,\n            <Button key=\"remove\" onClick={() => this.saveAvatar(\"\")}>\n              {this.m(\"avatar.remove\")}\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={pending}\n              onClick={this.prepareAvatar}\n            >\n              {this.m(\"save\", \"\")}\n            </Button>,\n          ]}\n        >\n          <Spin spinning={pending}>\n            <input ref={fileInputRef} type=\"file\" className=\"form-control\" />\n          </Spin>\n        </Modal>\n        <h2 className=\"title gx-mb-4\">{this.m(\"profile\")}</h2>\n        <Card>\n          <Flex between className=\"flex-reset-lg\">\n            <Flex wrap>\n              <div className=\"gx-pointer\" onClick={this.modalShow}>\n                {user.show.picture ? (\n                  <Avatar\n                    size={64}\n                    src={user.show.picture}\n                    style={{\n                      marginRight: \"15px\",\n                    }}\n                  />\n                ) : (\n                  <Avatar\n                    size={64}\n                    style={{\n                      marginRight: \"15px\",\n                    }}\n                  >\n                    {user.show.literal}\n                  </Avatar>\n                )}\n              </div>\n              <div>\n                <h5>{user.show.hello}</h5>\n                <Space>\n                  <Badge\n                    style={{ backgroundColor: \"#52c41a\" }}\n                    count={this.m(\"active\")}\n                  />\n                  {user.isAdmin && (\n                    <Badge\n                      style={{ backgroundColor: \"#038FDE\" }}\n                      count={this.m(\"admin\")}\n                    />\n                  )}\n                  {user.isGuest && (\n                    <Badge\n                      style={{ backgroundColor: \"#a0d911\" }}\n                      count={this.m(\"guest\")}\n                    />\n                  )}\n                </Space>\n              </div>\n            </Flex>\n            <div className=\"gx-text-right\">\n              <div>{this.m(\"connection\")}:</div>\n              <div className=\"gx-text-muted gx-font-weight-light gx-mt-1 break-all\">\n                {user.connectionLink}\n                <span\n                  className=\"gx-ml-2 gx-link\"\n                  onClick={() => {\n                    navigator.clipboard.writeText(user.connectionLink);\n                    message.success(this.m(\"copied\"));\n                  }}\n                >\n                  <CopyOutlined />\n                </span>\n              </div>\n              <div><small>{this.m(\"connectionHint\")}</small></div>\n            </div>\n          </Flex>\n        </Card>\n        <Card>\n          <Spin spinning={pending}>\n            <Form\n              name=\"basic\"\n              onFinish={this.save}\n              className=\"gx-signin-form gx-form-row0\"\n              autoComplete=\"off\"\n              {...layout}\n            >\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    type: \"email\",\n                    message: this.m(\"email.invalid\"),\n                  },\n                ]}\n                name=\"email\"\n                label={this.m(\"email\")}\n                initialValue={user.raw.profile.email}\n              >\n                <Input placeholder={this.m(\"email\")} />\n              </Form.Item>\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    message: this.m(\"name.invalid\"),\n                  },\n                ]}\n                name=\"name\"\n                label={this.m(\"name\")}\n                initialValue={user.raw.profile.name}\n              >\n                <Input placeholder={this.m(\"name\")} />\n              </Form.Item>\n\n              <Row>\n                <Col span={8}></Col>\n                <Col span={16}>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={pending}>\n                    {this.m(\"save\", \"\")}\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Spin>\n        </Card>\n        <h2 className=\"gx-mb-4\">{this.m(\"passchange\")} </h2>\n        <Card>\n          <Spin spinning={pending}>\n            <Form\n              name=\"basic\"\n              onFinish={this.changePassword}\n              className=\"gx-signin-form gx-form-row0\"\n              autoComplete=\"off\"\n              {...layout}\n            >\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n                label={this.m(\"oldpass\")}\n                name=\"oldpass\"\n              >\n                <Input.Password />\n              </Form.Item>\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n                label={this.m(\"newpass\")}\n                name=\"newpass\"\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Row>\n                <Col span={8}></Col>\n                <Col span={16}>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={pending}>\n                    {this.m(\"change\", \"\")}\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Spin>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, null)(injectIntl(Profile));\n","export default function toBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const readerResult = reader.result;\n      const resultString = readerResult.toString();\n      const re = /^data:(.*,)?/;\n      let mimeRe = resultString.match(re);\n      let type = mimeRe[0];\n\n      let encoded = resultString.replace(re, \"\");\n      if (encoded.length % 4 > 0) {\n        encoded += \"=\".repeat(4 - (encoded.length % 4));\n      }\n\n      resolve({ encoded, type, readerResult });\n    };\n    reader.onerror = (error) => reject(error);\n  });\n}\n"],"sourceRoot":""}