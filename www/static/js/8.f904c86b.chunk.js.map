{"version":3,"sources":["routes/Stations/DriverStationDetail.js","routes/Stations/DriverStations.js","util/Statelabel.js","api/online.js","util/PlainSelect.js","util/paramsHasChanged.js","util/isDate.js","routes/Stations/StationsMap.js","routes/Connectors/ConnectorButtons.js"],"names":["online","tick","DriverStationDetail","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","m","key","prefix","arguments","length","undefined","intl","formatMessage","id","pendingStart","onPendingStart","setState","pending","pendingEnd","onPendingEnd","load","_asyncToGenerator","_regeneratorRuntime","mark","_callee","readings","_yield$Promise$allSet","_yield$Promise$allSet2","item","access","files","wrap","_context","prev","next","stationId","context","api","q","toArray","Promise","allSettled","sent","map","result","value","_slicedToArray","stop","chargeToggle","_callee2","_args2","_context2","detailPending","charging","message","error","success","reserveToggle","_callee3","_args3","_context3","reserved","state","_createClass","this","prevProps","_this2","locale","_this3","_this$state","connectors","DetailRow","_ref4","property","connected","Date","toLocaleString","_jsxs","Row","gutter","className","children","_jsx","Col","xs","Spin","spinning","Empty","description","Flex","between","Statelabel","_objectSpread","readOnly","u","onFinish","prop","_Fragment","c","idx","chargername","chargerdescription","style","whiteSpace","ConnectorButtons","Link","to","concat","Button","f","alt","src","link","React","Component","contextType","Context","withRouter","injectIntl","DriverStations","setParams","match","params","carId","param1","chargerId","param2","search","push","field","compare","charger","stations","getItemGeo","geo","lat","latitude","lng","longitude","drawerClose","drawerVisible","onPlacemarkClick","drawerItem","config","window","appConfig","mapLanguage","mapLoaded","paramsHasChanged","mapDefaultCenter","Array","isArray","points","filter","mapRef","createRef","lang","CircularProgress","title","label","placement","onClose","visible","CustomScrollbars","Helmet","visibility","size","PlainSelect","placeholder","formatLabel","identity","extraFields","enabledOnly","labelKey","query","onChange","v","history","chargerac","defaultState","center","zoom","width","height","modules","onLoad","ymaps","current","setBounds","util","bounds","fromPoints","instanceRef","ref","balloonContent","modelname","vendorname","defaultGeometry","onClick","options","iconLayout","iconImageHref","iconImageSize","confirm","Modal","popoverToggle","popoverOpen","methods","classcode","run","method","ask","actioncode","content","icon","onOk","statelabel","color","created","enabled","disabled","deleted","statetypecode","trigger","onVisibleChange","withOnline","d","statenewlabel","statenewtypecode","is","fetch","goOffline","dispatch","log","goOnline","type","detail","dispatchEvent","CustomEvent","token","accessToken","get","dt","setMilliseconds","getMilliseconds","apiCheckInterval","body","JSON","stringify","reclimit","orderby","json","response","headers","Headers","append","url","apiDomain","apiPath","mode","cache","items","forEach","n","object","itemsCount","Object","keys","debug","console","mapOnlineProps","propsKeys","onOnlineChanged","e","data","passProps","propName","addEventListener","removeEventListener","anyChanges","onlineInterval","setInterval","Option","Select","createSearch","searchText","async","getLabelKey","getIdKey","valueKey","shureHaveValue","find","fields","fetchFn","onSearch","i","then","option","defaultActiveFirstOption","allowClear","loading","showSearch","optionFilterProp","filterOption","input","toLowerCase","indexOf","prevParams","nowParams","param3","isDate","date","isNaN","StationsMap","properties","balloonContentHeader","join","balloonContentFooter","includes","statecode","Fragment","Tooltip","stopPropagation","FallOutlined","HistoryOutlined","statenewcode"],"mappings":"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","file":"static/js/8.f904c86b.chunk.js","sourcesContent":["import React from \"react\";\nimport Context from \"../../Context\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport { Button, Col, Empty, message, Row, Spin, Tooltip } from \"antd\";\nimport isDate from \"../../util/isDate\";\nimport Flex from \"../../util/Flex\";\nimport Statelabel from \"../../util/Statelabel\";\nimport ConnectorButtons from \"../Connectors/ConnectorButtons\";\nimport { online } from \"../../api/online\";\n//import config from \"../../api/config\";\n\n// if (!window.onlineInterval && config.apiCheckInterval) {\n//   window.setInterval(() => online.tick(), config.apiCheckInterval);\n// }\n\nonline.tick();\n\nclass DriverStationDetail extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailPending: false,\n      pending: false,\n      stationId: false,\n      item: {},\n      access: {},\n      files: [],\n    };\n  }\n  m = (key, prefix = \"stations.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.stationId !== this.props.stationId ||\n      prevProps.intl.locale !== this.props.intl.locale\n    ) {\n      this.setState({ item: {} }, () => this.load());\n    }\n  }\n\n  load = async () => {\n    if (this.props.stationId) {\n      this.pendingStart();\n\n      let readings = [\n        this.context.api.q(\"/charge_point/get\", {\n          id: this.props.stationId,\n        }),\n        this.context.api.q(\"/object/access/decode\", {\n          id: this.props.stationId,\n        }),\n        this.context.api.q(\n          \"/object/file\",\n          {\n            id: this.props.stationId,\n          },\n          { toArray: true }\n        ),\n      ];\n      let [item, access, files] = (await Promise.allSettled(readings)).map(\n        (result) => result.value\n      );\n\n      this.setState({ item, access, files }, () => this.pendingEnd());\n    } else {\n      this.setState({ item: {}, access: {}, files: [] });\n    }\n  };\n\n  chargeToggle = async (item = {}) => {\n    if (item.id) {\n      this.setState({ detailPending: true });\n      let result = false;\n      if (item.charging) {\n        result = await this.context.api.q(\"/connector/remote/stop\", {\n          id: item.id,\n        });\n      } else {\n        result = await this.context.api.q(\"/connector/remote/start\", {\n          id: item.id,\n        });\n      }\n      this.setState({ detailPending: false });\n      if (result === false) {\n        message.error(this.m(\"method.fail\", \"\"));\n      } else {\n        message.success(this.m(\"method.success\", \"\"));\n      }\n      this.load();\n    }\n  };\n\n  reserveToggle = async (item = {}) => {\n    if (item.id) {\n      this.setState({ detailPending: true });\n      let result = false;\n      if (item.reserved) {\n        result = await this.context.api.q(\"/connector/reserve/cancel\", {\n          id: item.id,\n        });\n      } else {\n        result = await this.context.api.q(\"/connector/reserve/now\", {\n          id: item.id,\n        });\n      }\n      this.setState({ detailPending: false });\n      if (result === false) {\n        message.error(this.m(\"method.fail\", \"\"));\n      } else {\n        message.success(this.m(\"method.success\", \"\"));\n      }\n      this.load();\n    }\n  };\n\n  render() {\n    const { pending, item, access, files } = this.state;\n    const connectors = item.connectors || [];\n\n    const displayDetailProps = [\n      \"identity\",\n      \"modelname\",\n      \"vendorname\",\n      \"serialnumber\",\n      \"boxserialnumber\",\n      \"iccid\",\n      \"imsi\",\n      \"networkname\",\n      \"connected\",\n      \"connectionupdate\",\n      \"lastupdate\",\n    ];\n\n    const DetailRow = ({item, property, connected}) => {\n      let value = item?.[property];\n      if (typeof value === \"string\") {\n        if (property === 'lastupdate' || property === 'created' || property === 'connectionupdate') {\n          value = new Date(value).toLocaleString();\n        }\n      } else if (typeof value === \"boolean\") {\n        value = value ? this.m(\"true\") : this.m(\"false\")\n      }\n      if (!value) return null;\n      return (\n        <Row gutter={[16, 16]} className=\"gx-mb-2\">\n          <Col className=\"gx-text-muted gx-font-weight-light gx-pr-2\" xs={10}>\n            {property === 'connectionupdate' ? connected ? this.m(property) : this.m(\"disconnected\") : this.m(property)}\n          </Col>\n          <Col xs={14}>{value}</Col>\n        </Row>\n      );\n    };\n\n    return (\n      <div>\n        <Spin spinning={pending}>\n          {!item?.id && <Empty />}\n          {item?.id && (\n            <div className=\"gx-mb-3\">\n              {item?.description && (\n                <div className=\"gx-text-muted gx-font-weight-light gx-mb-3\">\n                  {item.description}\n                </div>\n              )}\n              <Flex between className=\"gx-mb-3 gx-pr-1\">\n                <h4>{this.m(\"details\")}</h4>\n                <Statelabel\n                  {...item}\n                  readOnly={!access?.u}\n                  onFinish={this.load}\n                />\n              </Flex>\n              {displayDetailProps.map((prop) => (\n                <DetailRow key={prop} item={item} property={prop} connected={item.connected} />\n              ))}\n              {connectors.length > 0 && (\n                <>\n                  <Spin spinning={this.state.detailPending}>\n                    <hr />\n                    {connectors.map((c, idx) => {\n                      return (\n                        <div className=\"gx-mb-2\" key={idx}>\n                          <Flex between>\n                            <div>\n                              {c.chargername}\n                              <div className=\"gx-font-weight-light gx-text-small gx-text-muted\">\n                                {c.chargerdescription}\n                              </div>\n                            </div>\n                            <div className=\"gx-ml-2 gx-mr-1\">\n                              <Statelabel\n                                {...c}\n                                readOnly={true}\n                                onFinish={this.load}\n                              />\n                              <div style={{ whiteSpace: \"nowrap\" }}>\n                                <ConnectorButtons\n                                  m={this.m}\n                                  {...c}\n                                  chargeToggle={(value) =>\n                                    this.chargeToggle(c, value)\n                                  }\n                                  reserveToggle={(value) =>\n                                    this.reserveToggle(c, value)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </Flex>\n                        </div>\n                      );\n                    })}\n                  </Spin>\n                </>\n              )}\n              {access?.u && (\n                <Link to={`/crm/station/${item.id}`}>\n                  <Button className=\"gx-mb-0 gx-mt-4\">\n                    {this.m(\"edit\", \"\")}\n                  </Button>\n                </Link>\n              )}\n              {files.length > 0 && (\n                <>\n                  <hr />\n                  {files.map((f, idx) => {\n                    return (\n                      <img\n                        key={idx}\n                        alt=\"\"\n                        src={f.link}\n                      />\n                    );\n                  })}\n                </>\n              )}\n            </div>\n          )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(DriverStationDetail));\n","import { Card, Drawer, Empty } from \"antd\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { YMaps, Map, Placemark, ZoomControl } from \"react-yandex-maps\";\nimport CircularProgress from \"../../components/CircularProgress\";\nimport Context from \"../../Context\";\nimport CustomScrollbars from \"../../util/CustomScrollbars\";\nimport paramsHasChanged from \"../../util/paramsHasChanged\";\nimport PlainSelect from \"../../util/PlainSelect\";\nimport DriverStationDetail from \"./DriverStationDetail\";\nimport StationsMap from \"./StationsMap\";\n\nclass DriverStations extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n\tthis.config = window.appConfig || { mapLanguage: \"ru_RU\" };\n    this.state = {\n\t\t\n      mapLoaded: false,\n      pending: false,\n      stations: [],\n\n      carId: false,\n      chargerId: false,\n\n      drawerVisible: false,\n      drawerItem: {},\n    };\n  }\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  m = (key, prefix = \"stations.map.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  componentDidMount() {\n    this.setParams();\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (paramsHasChanged(prevProps, this.props)) {\n      this.setParams();\n    }\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.load();\n    }\n  }\n\n  setParams = () => {\n    const { param1: carId, param2: chargerId } = this.props.match.params;\n    this.setState(\n      {\n        carId,\n        chargerId,\n      },\n      () => this.load()\n    );\n  };\n\n  load = async () => {\n    this.pendingStart();\n\n    let search = [];\n    if (this.state.chargerId) {\n      search.push({\n        field: \"connectors\",\n        compare: \"GIN\",\n        value: [{ charger: this.state.chargerId }],\n      });\n    }\n    let stations = await this.context.api.q(\n      \"/charge_point/list\",\n      { search },\n      { toArray: true }\n    );\n    this.setState({ stations }, () => this.pendingEnd());\n  };\n\n  getItemGeo = (item) => {\n    let geo = item?.geo?.[0] || {};\n    let lat = geo.latitude;\n    let lng = geo.longitude;\n    if (lat && lng) {\n      return [lat, lng];\n    }\n    return null;\n  };\n\n  drawerClose = () => {\n    this.setState({ drawerVisible: false });\n  };\n\n  onPlacemarkClick = (drawerItem) => {\n    this.setState({ drawerItem, drawerVisible: true });\n  };\n\n  render() {\n    const { stations, mapLoaded, pending, drawerItem } = this.state;\n    let defaultCenter = window.appConfig.mapDefaultCenter;\n\tif (!Array.isArray(stations)) return null;\n    if (stations.length === 0) return <Empty />;\n\n    \n      const points = stations\n      .map((item) => this.getItemGeo(item))\n      .filter((geo) => geo);\n\t  if (points.length === 0) {\n\t\treturn (\n\t\t  <div className={this.props.className}>\n\t\t\t<Empty />\n\t\t  </div>\n\t\t);\n\t  }\n  \n\t  \n    const mapRef = React.createRef();\n\tconst lang = this.config.mapLanguage;\n    return (\n      <>\n        {(!mapLoaded || pending) && <CircularProgress />}\n        <Drawer\n          title={drawerItem?.label}\n          placement=\"right\"\n          onClose={this.drawerClose}\n          visible={this.state.drawerVisible}\n        >\n          <CustomScrollbars>\n            <DriverStationDetail stationId={drawerItem?.id} />\n          </CustomScrollbars>\n        </Drawer>\n        <Helmet>\n          <title>{this.m(\"stations\")}</title>\n        </Helmet>\n        <div\n          className=\"gx-st-map huge\"\n          style={{ visibility: mapLoaded && !pending ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"filterbox\">\n            <Card size=\"small\">\n              <PlainSelect\n                value={this.state.carId}\n                placeholder={this.m(\"forcar\")}\n                formatLabel={(item) => `${item.label} ${item.identity}`}\n                extraFields={[\"identity\", \"chargerac\"]}\n                enabledOnly\n                labelKey=\"label\"\n                query=\"/car/list\"\n                onChange={(v, item) => {\n\n                  this.props.history.push(\n                    `/driver/stations/${v}/${item.chargerac || \"\"}`\n                  );\n                }}\n              />\n            </Card>\n          </div>\n          <YMaps key={lang} query={{ lang }}>\n            <Map\n              defaultState={{ center: points[0] || [50.85045, 4.34878], zoom: 9 }}\n              width={\"100%\"}\n              height={\"100%\"}\n              modules={[\"geoObject.addon.balloon\", \"util.bounds\"]}\n              onLoad={(ymaps) => {\n                this.setState({ mapLoaded: true });\n                if (points.length > 1) {\n                  mapRef.current.setBounds(\n                    ymaps.util.bounds.fromPoints(points)\n                  );\n                }\n              }}\n              instanceRef={(ref) => {\n                if (ref) {\n                  mapRef.current = ref;\n                }\n              }}\n            >\n              {stations.length !== 0 ? stations.map((item, idx) => {\n                let geo = this.getItemGeo(item);\n                if (!geo) return null;\n\n                let balloonContent = [];\n                if (item.description)\n                  balloonContent.push(`<div>${item.description || \"\"}</div>`);\n                if (item.modelname)\n                  balloonContent.push(\n                    `<div>${item.modelname || \"\"} ${\n                      item.vendorname || \"\"\n                    }</div>`\n                  );\n\n                return (\n                  <Placemark\n                    key={idx}\n                    defaultGeometry={geo}\n                    onClick={() => this.onPlacemarkClick(item)}\n                    options={{\n                      iconLayout: \"default#image\",\n                      iconImageHref: \"/assets/images/images-32-removebg-preview.png\",\n                      iconImageSize: [32, 32],\n                    }}\n                  />\n                );\n              }) : []}\n              <ZoomControl />\n            </Map>\n          </YMaps>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(DriverStations));\n","import { message, Popover, Spin, Tag, Modal } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport React from \"react\";\nimport Context from \"../Context\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { withOnline } from \"../api/online\";\n\nconst { confirm } = Modal;\n\nclass Statelabel extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverOpen: false,\n      methods: [],\n    };\n  }\n\n  popoverToggle = () => {\n    this.setState(\n      (state) => {\n        return {\n          popoverOpen: !state.popoverOpen,\n          methods: !state.popoverOpen ? [] : state.methods,\n        };\n      },\n      () => this.load()\n    );\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  load = async () => {\n    if (this.state.popoverOpen) {\n      this.pendingStart();\n      let methods = await this.context.api.q(\n        `/${this.props.classcode}/method`,\n        { id: this.props.id },\n        { toArray: true }\n      );\n      this.setState({ methods }, () => this.pendingEnd());\n    }\n  };\n\n  run = async (method) => {\n    this.pendingStart();\n    let result = await this.context.api.q(\"/method/run\", {\n      id: this.props.id,\n      method: method.id,\n    });\n    this.pendingEnd();\n    this.popoverToggle();\n    if (!result) {\n      message.error(this.m(\"method.fail\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"method.success\"));\n      if (this.props.onFinish) {\n        this.props.onFinish(method);\n      }\n    }\n  };\n\n  ask = async (method) => {\n    if (method.actioncode === \"drop\") {\n      confirm({\n        title: this.m(\"method.confirm.title\"),\n        content: this.m(\"method.confirm.text\"),\n        icon: <ExclamationCircleOutlined />,\n        onOk: () => {\n          this.run(method);\n        },\n      });\n    } else {\n      this.run(method);\n    }\n  };\n\n  m = (id) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id });\n  };\n\n  render() {\n    if (!this.props?.statelabel) return null;\n\n    const { pending, methods = [] } = this.state;\n\n    const colors = {\n      created: \"processing\",\n      enabled: \"success\",\n      disabled: \"default\",\n      deleted: \"error\",\n    };\n\n    const label = (\n      <Tag className=\"gx-m-0\" color={colors[this.props.statetypecode]}>\n        {this.props.statelabel}\n      </Tag>\n    );\n\n    if (this.props.readOnly) return label;\n\n    return (\n      <Popover\n        content={\n          <div className={`${methods.length === 0 && \"gx-p-3\"}`}>\n            <Spin spinning={pending}>\n              {methods.map((method) => {\n                if (!method.visible) return null;\n                return (\n                  <div\n                    key={method.id}\n                    onClick={() => this.ask(method)}\n                    className=\"gx-my-2 gx-pointer gx-link\"\n                  >\n                    {method.label}\n                  </div>\n                );\n              })}\n            </Spin>\n          </div>\n        }\n        trigger=\"click\"\n        visible={this.state.popoverOpen}\n        onVisibleChange={this.popoverToggle}\n      >\n        <div className=\"gx-pointer\">{label}</div>\n      </Popover>\n    );\n  }\n}\n\nconst mapOnlineProps = {\n  statelabel: (d) => d.statenewlabel,\n  statetypecode: (d) => d.statenewtypecode,\n};\nexport default withOnline(injectIntl(Statelabel), mapOnlineProps);\n","import React from \"react\";\nimport config from \"./config\";\nimport accessToken from \"./token\";\n\nconst online = {\n  is: false,\n\n  tick: () => {\n    online.fetch();\n  },\n  goOffline: () => {\n    if (online.is) {\n      online.is = false;\n      online.dispatch(\"onlineGoOffline\");\n      online.log(\"Went offline\");\n    }\n  },\n  goOnline: () => {\n    if (!online.is) {\n      online.is = true;\n      online.dispatch(\"onlineGoOnline\");\n      online.log(\"Back On Line\");\n    }\n  },\n  dispatch: (type, detail = {}) => {\n    window.dispatchEvent(new CustomEvent(type, { detail }));\n  },\n  fetch: async () => {\n    let token = accessToken.get();\n    if (token) {\n      let dt = new Date();\n      dt.setMilliseconds(\n        dt.getMilliseconds() - (config.apiCheckInterval + 5000)\n      );\n\n      const body = JSON.stringify({\n        search: [{ field: \"datetime\", value: dt, compare: \"GEQ\" }],\n        reclimit: 500,\n        orderby: [\"datetime DESC\"],\n      });\n\n      let json = null;\n      let response = null;\n      let headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"Authorization\", `Bearer ${token}`);\n      const url = `${config.apiDomain}${config.apiPath}/notification/list`;\n\n      try {\n        response = await fetch(url, {\n          method: \"POST\",\n          headers,\n          body,\n          mode: \"cors\",\n          cache: \"no-store\",\n        });\n        if (response) {\n          json = await response.json();\n          if (json?.error) {\n            return online.error(json?.error?.message);\n          }\n        }\n        online.goOnline();\n      } catch (e) {\n        online.goOffline();\n        return online.error(e.message);\n      }\n      if (json) {\n        let items = {};\n        (Array.isArray(json) ? json : [json]).forEach((n) => {\n          if (!items[n.object]) {\n            items[n.object] = n;\n          }\n        });\n\n        let itemsCount = Object.keys(items).length;\n\n        if (itemsCount > 0) {\n          online.dispatch(\"onlineChanged\", { items });\n          online.log(\"messages count \" + itemsCount);\n        }\n      }\n      return false;\n    }\n  },\n  error: (message) => {\n    if (config.debug) {\n      console.log(`%c OnLine: ERROR \"${message}\"`, \"color: orange\");\n    }\n    return false;\n  },\n  log: (message) => {\n    if (config.debug) {\n      console.log(`%c OnLine: ${message}`, \"color: cyan\");\n    }\n  },\n};\n\nif (!window.onlineInterval && config.apiCheckInterval) {\n  window.setInterval(() => online.tick(), config.apiCheckInterval);\n}\n\nfunction withOnline(Component, mapOnlineProps) {\n  const propsKeys = Object.keys(mapOnlineProps);\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        passProps: {},\n      };\n    }\n    componentDidMount() {\n      window.addEventListener(\"onlineChanged\", this.onOnlineChanged);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"onlineChanged\", this.onOnlineChanged);\n    }\n\n    onOnlineChanged = (e) => {\n      let data = e?.detail?.items[this.props.id];\n      if (data) {\n        this.setState(({ passProps }) => {\n          propsKeys.forEach((propName) => {\n            passProps[propName] = mapOnlineProps[propName](data);\n          });\n          return { passProps };\n        });\n\n        this.setState({ data });\n      }\n    };\n\n    componentDidUpdate(prevProps) {\n      let { passProps } = this.state;\n      let anyChanges = false;\n\n      propsKeys.forEach((propName) => {\n        if (prevProps[propName] !== this.props[propName]) {\n          passProps[propName] = this.props[propName];\n          anyChanges = true;\n        }\n      });\n      if (anyChanges) this.setState({ passProps });\n    }\n\n    render() {\n      const { passProps } = this.state;\n\n      return <Component {...this.props} {...passProps} />;\n    }\n  };\n}\n\nexport { online, withOnline };\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Select } from \"antd\";\nimport Context from \"../Context\";\n\nconst { Option } = Select;\n\nclass PlainSelect extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      pending: false,\n      items: [],\n    };\n  }\n  componentDidMount() {\n    this.load().then(this.shureHaveValue());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.shureHaveValue();\n    }\n  }\n\n  createSearch = () => {\n    let search = this.props.search || [];\n    if (this.state.searchText && this.props.async) {\n      search.push({\n        field: this.props.labelKey || \"label\",\n        compare: \"IKE\",\n        value: `%${this.state.searchText}%`,\n      });\n    }\n    if (this.props.enabledOnly) {\n      search.push({\n        field: \"statetypecode\",\n        compare: \"EQL\",\n        value: \"enabled\",\n      });\n    }\n    return search;\n  };\n\n  getLabelKey = () => this.props.labelKey || \"label\";\n\n  getIdKey = () => this.props.valueKey || \"id\";\n\n  shureHaveValue = async () => {\n    if (this.props.async) {\n      if (\n        !this.state.items.find(\n          (item) => item[this.getIdKey()] === this.props.value\n        )\n      ) {\n        this.setState({ pending: true });\n        let result = await this.context.api.q(\"/object/get\", {\n          id: this.props.value,\n          fields: [this.getIdKey(), this.getLabelKey()],\n        });\n        this.setState({ pending: false });\n        if (result?.[this.getLabelKey()]) {\n          this.setState(({ items }) => {\n            items.push(result);\n            return { items };\n          });\n        }\n      }\n    }\n  };\n\n  load = async () => {\n    if (this.props.items) {\n      this.setState({ items: this.props.items });\n      return;\n    }\n\n    let items = [];\n\n    let reclimit = this.props.async ? 1 : 0;\n\n    if (this.props.query) {\n      this.setState({ pending: true });\n      let search = this.createSearch();\n\n      let fields = [this.getIdKey(), this.getLabelKey()].concat(\n        this.props.extraFields || []\n      );\n\n      let fetchFn = this.props.cache\n        ? this.context.api.cache\n        : this.context.api.q;\n      items = await fetchFn(\n        this.props.query,\n        { search, reclimit, fields },\n        { toArray: true }\n      );\n      this.setState({ pending: false, items });\n    }\n  };\n  onSearch = async (value) => {\n    if (this.props.async) {\n      this.setState({ searchText: value }, () => this.load());\n    }\n  };\n\n  onChange = (value) => {\n    let item = this.state.items.find((i) => i[this.getIdKey()] === value);\n    this.props.onChange(value, item);\n  };\n\n  render() {\n    let valueRendered = false;\n    let items = this.state.items.map((item, idx) => {\n      let option = item || {};\n      let value = option[this.getIdKey()];\n      let label = this.props.formatLabel\n        ? this.props.formatLabel(item)\n        : option[this.getLabelKey()];\n      if (value === this.props.value) valueRendered = true;\n      return (\n        <Option key={idx} value={value}>\n          {label}\n        </Option>\n      );\n    });\n\n    return (\n      <Select\n        defaultActiveFirstOption={false}\n        allowClear={this.props.allowClear}\n        loading={this.state.pending ? true : false}\n        value={!this.state.pending ? this.props.value : null}\n        showSearch\n        placeholder={this.props.placeholder}\n        optionFilterProp=\"children\"\n        onChange={this.onChange}\n        onSearch={this.onSearch}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {items}\n      </Select>\n    );\n  }\n}\nexport default injectIntl(PlainSelect);\n","export default function paramsHasChanged(prevProps, props) {\n  const prevParams = prevProps.match.params || {};\n  const nowParams = props.match.params || {};\n\n  if (\n    prevParams.param1 !== nowParams.param1 ||\n    prevParams.param2 !== nowParams.param2 ||\n    prevParams.param3 !== nowParams.param3\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","export default function isDate(date) {\n  if (!date) return false;\n  return new Date(date) !== \"Invalid Date\" && !isNaN(new Date(date));\n}\n","import React from \"react\";\nimport { Empty, Spin } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { YMaps, Map, Placemark, ZoomControl } from \"react-yandex-maps\";\n\nclass StationsMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.config = window.appConfig || { mapLanguage: \"ru_RU\" };\n    this.state = {\n      mapLoaded: false,\n    };\n  }\n\n  m = (key, prefix = \"stations.map.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  getItemGeo = (item) => {\n    let geo = item?.geo?.[0] || {};\n    let lat = geo.latitude;\n    let lng = geo.longitude;\n    if (lat && lng) {\n      return [lat, lng];\n    }\n    return null;\n  };\n\n  render() {\n    const { stations } = this.props;\n    if (!Array.isArray(stations)) return null;\n    if (stations.length === 0) return <Empty />;\n\n    const mapRef = React.createRef();\n\n    const points = stations\n      .map((item) => this.getItemGeo(item))\n      .filter((geo) => geo);\n\n    if (points.length === 0) {\n      return (\n        <div className={this.props.className}>\n          <Empty />\n        </div>\n      );\n    }\n\n    const lang = this.config.mapLanguage;\n\n    return (\n      <div className={this.props.className}>\n        {!this.state.mapLoaded && <Spin spinning></Spin>}\n        <YMaps key={lang} query={{ lang }} >\n          <Map\n            defaultState={{ center: points[0] || [], zoom: 9 }}\n            width={\"100%\"}\n            height={\"100%\"}\n            modules={[\"geoObject.addon.balloon\", \"util.bounds\"]}\n            onLoad={(ymaps) => {\n              this.setState({ mapLoaded: true });\n              if (points.length > 1) {\n                mapRef.current.setBounds(ymaps.util.bounds.fromPoints(points));\n              }\n            }}\n            instanceRef={(ref) => {\n              if (ref) {\n                mapRef.current = ref;\n              }\n            }}\n          >\n            {stations.map((item, idx) => {\n              let geo = this.getItemGeo(item);\n              if (!geo) return null;\n\n              let balloonContent = [];\n              if (item.description)\n                balloonContent.push(`<div>${item.description || \"\"}</div>`);\n              if (item.modelname)\n                balloonContent.push(\n                  `<div>${item.modelname || \"\"} ${item.vendorname || \"\"}</div>`\n                );\n\n              return (\n                <Placemark\n                  key={idx}\n                  defaultGeometry={geo}\n                  options={{\n                    iconLayout: \"default#image\",\n                    iconImageHref: \"/assets/images/images-32-removebg-preview.png\",\n                    iconImageSize: [32, 32],\n                  }}\n                  properties={{\n                    balloonContentHeader: `${item.label}`,\n                    balloonContent: balloonContent.join(\"\"),\n                    balloonContentFooter: `<a href=\"/crm/station/${\n                      item.id\n                    }\">${this.m(\"more\")}</a>`,\n                  }}\n                />\n              );\n            })}\n            <ZoomControl />\n          </Map>\n        </YMaps>\n      </div>\n    );\n  }\n}\nexport default injectIntl(StationsMap);\n","import { FallOutlined, HistoryOutlined } from \"@ant-design/icons\";\nimport { Button, Tooltip } from \"antd\";\nimport React from \"react\";\nimport { withOnline } from \"../../api/online\";\n\nfunction ConnectorButtons(props) {\n  let charging = [\"charging\"].includes(props.statecode);\n  let reserved = [\"reserved\"].includes(props.statecode);\n\n  return (\n    <React.Fragment>\n      <Tooltip title={props.m(\"btn.charge\")}>\n        <Button\n          className=\"gx-mr-1\"\n          onClick={(e) => {\n            e.stopPropagation();\n            props.chargeToggle(charging);\n          }}\n          icon={\n            <FallOutlined className={`${charging ? \"gx-text-warning\" : \"\"}`} />\n          }\n        />\n      </Tooltip>\n      <Tooltip title={props.m(\"btn.reserve\")}>\n        <Button\n          onClick={(e) => {\n            e.stopPropagation();\n            props.reserveToggle(reserved);\n          }}\n          icon={\n            <HistoryOutlined\n              className={`${reserved ? \"gx-text-warning\" : \"\"}`}\n            />\n          }\n        />\n      </Tooltip>\n    </React.Fragment>\n  );\n}\nconst mapOnlineProps = {\n  statecode: (d) => d.statenewcode,\n};\nexport default withOnline(ConnectorButtons, mapOnlineProps);\n"],"sourceRoot":""}